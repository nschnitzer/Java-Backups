//*********************************************************
// Nathan Schnitzer
// driver.java
// 1/22/18
//*********************************************************

import java.util.*;
import java.io.*;
import java.sql.ResultSet;

public class driver
{

	public static void main(String[] args) throws IOException
	{
		
		Scanner scan = new Scanner(new File("src/input.txt"));
		while (scan.hasNextLine())
		{
		String input = scan.nextLine();
		String canInput = "";
		System.out.println(input);
		
		//Finds where the paranthesis can go
		if (Enclosure.isBracketMatch(input))
		{
			ArrayList<Integer> results = new ArrayList<Integer>();
			//Stack<Character> stk = new Stack<Character>();
			if (input.indexOf('(') == -1) //Finds beginning parentheses
			{
				for (int i = input.indexOf('['); i < input.indexOf(')'); i++)
				{
					if (input.charAt(i+1) >= '0' && input.charAt(i) < '0')
					{
						canInput = canInput + " " + (i);
						results.add(i);
					}
				}
			}
			else //Finds end parentheses
			{
				for (int i = input.indexOf('(')+1; i < input.indexOf(']'); i++)
				{
					if ((input.charAt(i + 1) >= '0') && (input.charAt(i) < '0' && input.charAt(i) > 29))
					{
						if (input.charAt(i+2) >= '0' && input.charAt(i+2) < ']')
						{
							continue;
						}
						else
							canInput = canInput + " " + (i+3); //Really i+2 but because the problem indexes at 1
						results.add(i+3);
					}
				}
				//if (canInput.indexOf(input.indexOf(']')+1) == -1)
				{
					//canInput = canInput + " " + (input.indexOf(']')+1);
					//results.add(input.indexOf('['));
				}
			}
			System.out.println(results.toString());
		}
		else
		{
			//Stack<Character> stk = new Stack<Character>();
			if (input.indexOf('[') == -1) //Finds beginning bracket
			{
				for (int i = 0; i < input.indexOf('('); i++)
				{
					if (i == 0)
					{
						canInput = canInput + " " + (1);
					}
					else if (input.charAt(i) >= '0' && input.charAt(i+1) < '0')
					{
						if (input.charAt(i+2) >= '0' && input.charAt(i+2) < ']')
						{
							continue;
						}
						else
							canInput = canInput + " " + (i+3); //Really i+2 but because the problem indexes at 1
					}
				}
			}
			else //Finds the end bracket
			{
				for (int i = input.indexOf(')')+1; i < input.length()-1; i++)
				{
					if ((input.charAt(i + 1) >= '0') && input.charAt(i) < '0')
					{
						
							canInput = canInput + " " + (i+1); //Really i but because the problem indexes at 1
					}
				}
				canInput = canInput + " " + (input.length() + 1);
			}
		}
		
		System.out.println(canInput);

	}
	}

}
